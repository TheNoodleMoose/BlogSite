{"version":3,"sources":["webpack:///./src/components/listing.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/profile_pic.png","webpack:///./src/components/header.js","webpack:///./src/components/archive.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Listing","react_default","a","createElement","seo","title","keywords","gatsby_browser_entry","query","render","_ref","allMarkdownRemark","edges","map","_ref2","node","Post","key","frontmatter","id","PostContainer","to","slug","PostTitle","excerpt","InfoContainer","PostDate","date","style","background","color","textDecoration","display","flexDirection","justifyContent","alignItems","width","height","fontSize","borderRadius","margin","data","_2299073340","styled","article","withConfig","displayName","componentId","div","h2","p","IndexPage","location","layout","listing","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","HeaderWrapper","HeaderContainer","HeaderTitle","src","logo","alt","h1","Archive","Fragment","ArchiveContainer","post","_2103536551","aside","Layout","header","site","siteMetadata","renderprops","from","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","MainLayout","archive","Date","getFullYear","href","_2089470045","main","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-4cdf21f729ea00ab391b.js","sourcesContent":["import React from \"react\";\r\nimport { Link, StaticQuery, graphql } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst LISTING_QUERY = graphql`\r\n  query BlogPostListing {\r\n    allMarkdownRemark(\r\n      limit: 10\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          frontmatter {\r\n            date\r\n            title\r\n            slug\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Listing = () => (\r\n  <div>\r\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\r\n    <StaticQuery\r\n      query={LISTING_QUERY}\r\n      render={({ allMarkdownRemark }) =>\r\n        allMarkdownRemark.edges.map(({ node }) => (\r\n          <Post key={node.frontmatter.id}>\r\n            <PostContainer>\r\n              <Link to={`/posts/${node.frontmatter.slug}`}>\r\n                <PostTitle>{node.frontmatter.title}</PostTitle>\r\n              </Link>\r\n              <p>{node.excerpt}</p>\r\n              <InfoContainer>\r\n                <PostDate>{node.frontmatter.date}</PostDate>\r\n                <Link\r\n                  style={{\r\n                    background: `rgba(40, 61, 136, 0.3)`,\r\n                    color: `#29328d`,\r\n                    textDecoration: `none`,\r\n                    display: `flex`,\r\n                    flexDirection: \"row\",\r\n                    justifyContent: `center`,\r\n                    alignItems: `center`,\r\n                    width: `105px`,\r\n                    height: `20px`,\r\n                    fontSize: `14px`,\r\n                    borderRadius: `30px`,\r\n                    margin: `0 5px`\r\n                  }}\r\n                  to={`/posts/${node.frontmatter.slug}`}\r\n                >\r\n                  Read More\r\n                </Link>\r\n              </InfoContainer>\r\n            </PostContainer>\r\n          </Post>\r\n        ))\r\n      }\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Listing;\r\n\r\nconst Post = styled.article`\r\n  background: rgba(11, 34, 65, 0.3);\r\n  border-radius: 10px;\r\n  margin: 10px 0 46px 0;\r\n  -webkit-box-shadow: 0px 1px 15px 0px rgba(68, 68, 81, 0.6);\r\n  box-shadow: 0px 1px 15px 0px rgba(68, 68, 81, 0.6);\r\n`;\r\n\r\nconst PostContainer = styled.div`\r\n  margin: 10px;\r\n  color: #29328d;\r\n  font-size: 24px;\r\n  text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nconst PostTitle = styled.h2`\r\n  text-decoration: underline #e5e5e5;\r\n  color: #29328d;\r\n`;\r\n\r\nconst PostDate = styled.p`\r\n  background: rgba(40, 61, 136, 0.3);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n  width: 105px;\r\n  height: 20px;\r\n  font-size: 14px;\r\n  margin: 0 5px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding-bottom: 10px;\r\n`;\r\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Listing from \"../components/listing\";\n\nconst IndexPage = ({ location }) => (\n  <Layout location={location}>\n    <Listing />\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/profile_pic-b8b5fadc4cc5e79a5b5d693c1e954018.png\";","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport logo from \"../images/profile_pic.png\";\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <HeaderTitle>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n            display: `flex`,\n            flexDirection: \"row\",\n            justifyContent: `flex-start`,\n            alignItems: `center`\n          }}\n        >\n          <img\n            style={{\n              width: \"100px\",\n              height: \"auto\",\n              borderRadius: `50%`\n            }}\n            src={logo}\n            alt=\"ChristianHuffman\"\n          />\n          <br />\n          {siteTitle}\n        </Link>\n      </HeaderTitle>\n    </HeaderContainer>\n  </HeaderWrapper>\n);\n\nexport default Header;\n\nconst HeaderWrapper = styled.div`\n  background: #6585d4;\n  marginbottom: 2rem;\n`;\n\nconst HeaderContainer = styled.div`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n  img {\n    margin: 0px;\n  }\n`;\n\nconst HeaderTitle = styled.h1`\n  margin: 0;\n`;\n","import React from \"react\";\r\n\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\n\r\nconst POST_ARCHIVE_QUERY = graphql`\r\n  query BlogPostArchive {\r\n    allMarkdownRemark(\r\n      limit: 5\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            slug\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Archive = () => (\r\n  <StaticQuery\r\n    query={POST_ARCHIVE_QUERY}\r\n    render={({ allMarkdownRemark }) => (\r\n      <>\r\n        <ArchiveContainer>\r\n          <h3>Recent Post</h3>\r\n          <ul>\r\n            {allMarkdownRemark.edges.map(post => (\r\n              <li key={post.node.frontmatter.slug}>\r\n                <Link to={`/posts/${post.node.frontmatter.slug}`}>\r\n                  {post.node.frontmatter.title}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </ArchiveContainer>\r\n      </>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default Archive;\r\n\r\nconst ArchiveContainer = styled.aside`\r\n  margin: 10px 30px;\r\n  background: rgba(11, 34, 65, 0.3);\r\n  border-radius: 15px;\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { Spring } from \"react-spring/renderprops\";\nimport styled from \"styled-components\";\nimport Header from \"./header\";\nimport \"./layout.css\";\nimport Archive from \"./archive\";\n\nconst SITE_TITLE_QUERY = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n    file(relativePath: { regex: \"/bg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1000) {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n  }\n`;\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={SITE_TITLE_QUERY}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Spring\n          from={{ height: location.pathname === \"/\" ? 100 : 200 }}\n          to={{\n            height: location.pathname === \"/\" ? 200 : 100\n          }}\n        >\n          {styles => (\n            <div style={{ overflow: \"hidden\", ...styles }}>\n              <Img fluid={data.file.childImageSharp.fluid} />\n            </div>\n          )}\n        </Spring>\n\n        <MainLayout>\n          <main>{children}</main>\n          <Archive />\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </MainLayout>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 1rem auto;\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}